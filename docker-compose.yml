version: '3.8'

services:
  frontend:
    image: aeefg-survey-frontend:latest 
    build: ./AEEFGSurvey
    container_name: frontend-service
    ports:
      - "80:80"
    volumes:
      - ./AEEFGSurvey/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./AEEFGSurvey/Survey:/usr/share/nginx/html/Survey
      - ./AEEFGSurvey/Dashboard:/usr/share/nginx/html/Dashboard
    depends_on:
      - backend
    networks:
      - app-network
    user: nginx
    security_opt:
      - no-new-privileges:true

  backend:
    image: aeefg-survey-backend:latest 
    build: ./Backend
    container_name: backend-service
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/surveydb?useUnicode=true&characterEncoding=UTF-8&useSSL=true
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQL8Dialect
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    security_opt:
      - no-new-privileges:true

  db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_DATABASE: surveydb
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      LANG: C.UTF-8
      LC_ALL: C.UTF-8
    volumes:
      - data:/var/lib/mysql
      - ./mysql/initdb.d:/docker-entrypoint-initdb.d
      - ./mysql/conf.d:/etc/mysql/conf.d:ro
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network
    security_opt:
      - no-new-privileges:true
    command: 
      - --default-authentication-plugin=mysql_native_password
      - --bind-address=0.0.0.0
      - --sql-mode=STRICT_ALL_TABLES,NO_AUTO_VALUE_ON_ZERO
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

networks:
  app-network:
    driver: bridge

volumes:
  data:
    driver: local